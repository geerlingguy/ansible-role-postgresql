---

# NB: On Alpine, configuration files are created by rc-service postgresql setup
- block:

    - name: Ensure default configuration exists
      ansible.builtin.copy:
        backup: yes
        dest: "{{ __postgresql_config_path }}/{{ item }}"
        group: "{{ postgresql_group }}"
        mode: 0600
        owner: "{{ postgresql_user }}"
        remote_src: yes
        src: "/usr/share/postgresql{{ __postgresql_version }}/{{ item }}.sample"
      with_items:
        - postgresql.conf
        - pg_ident.conf

    - name: Remove default configuration
      ansible.builtin.file:
        path: "{{ __postgresql_data_dir }}/{{ item }}"
        state: absent
      with_items:
        - postgresql.conf
        - pg_hba.conf
        - pg_ident.conf

    - name: Link default configuration
      ansible.builtin.file:
        path: "{{ __postgresql_data_dir }}/{{ item }}"
        state: link
        src: "{{ __postgresql_config_path }}/{{ item }}"
        force: yes  # NB: Files will be created latter on
      with_items:
        - postgresql.conf
        - pg_hba.conf
        - pg_ident.conf
  when: ansible_os_family == 'Alpine'

- name: Configure global settings.
  lineinfile:
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    regexp: "^#?{{ item.option }}.+$"
    line: "{{ item.option }} = '{{ item.value }}'"
    state: "{{ item.state | default('present') }}"
    mode: 0644
  with_items: "{{ postgresql_global_config_options }}"
  notify: restart postgresql

- name: Configure host based authentication (if entries are configured).
  template:
    src: "pg_hba.conf.j2"
    dest: "{{ postgresql_config_path }}/pg_hba.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: 0600
  notify: restart postgresql
  when: postgresql_hba_entries | length > 0

- name: Ensure PostgreSQL unix socket dirs exist.
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: "{{ postgresql_unix_socket_directories_mode }}"
  with_items: "{{ postgresql_unix_socket_directories }}"
